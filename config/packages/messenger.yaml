# Single exchange messenger configuration with individual transports
# All queues use the same exchange (mds_main) but each has its own transport for granular consumption

parameters:
    # Shared configuration anchors
    rabbitmq_dsn: &rabbitmq_dsn
        dsn: '%env(MESSENGER_TRANSPORT_DSN_RABBITMQ)%'
    
    rabbitmq_retry: &rabbitmq_retry
        max_retries: 3
        multiplier: 2
    
    # Single exchange configuration template
    mds_exchange: &mds_exchange
        exchange:
            name: mds_main
            type: direct
            durable: true

framework:
    messenger:

        failure_transport: failed

        transports:
            # Individual transports for each queue - all using the same exchange
            extract_fetch:
                <<: *rabbitmq_dsn
                options:
                    <<: *mds_exchange
                    queues:
                        extract_fetch:
                            binding_keys: [extract_fetch]
                retry_strategy: *rabbitmq_retry
            
            extract_load:
                <<: *rabbitmq_dsn
                options:
                    <<: *mds_exchange
                    queues:
                        extract_load:
                            binding_keys: [extract_load]
                retry_strategy: *rabbitmq_retry
            
            grp_extract:
                <<: *rabbitmq_dsn
                options:
                    <<: *mds_exchange
                    queues:
                        grp_extract:
                            binding_keys: [grp_extract]
                retry_strategy: *rabbitmq_retry
            
            meili:
                <<: *rabbitmq_dsn
                options:
                    <<: *mds_exchange
                    queues:
                        meili:
                            binding_keys: [meili]
                retry_strategy: *rabbitmq_retry
            
            async:
                <<: *rabbitmq_dsn
                options:
                    <<: *mds_exchange
                    queues:
                        async:
                            binding_keys: [async]
                retry_strategy: *rabbitmq_retry

            failed:
                <<: *rabbitmq_dsn
                options:
                    <<: *mds_exchange
                    queues:
                        failed:
                            binding_keys: [failed]
            # sync: 'sync://'  # Removed to prevent fallback to sync

        default_bus: messenger.bus.default

        buses:
            messenger.bus.default:
                default_middleware: true
                middleware:
                    - validation
                    - doctrine_ping_connection
                    - dynamic_routing  # Enables TransportNamesStamp -> AmqpStamp conversion

        routing:
            # Default message routing - can be overridden with TransportNamesStamp
            'Survos\WorkflowBundle\Message\TransitionMessage': async
            'Survos\MeiliBundle\Message\BatchIndexEntitiesMessage': meili

